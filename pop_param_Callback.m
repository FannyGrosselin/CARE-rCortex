% pop_param_Callback() - function which allows user to choose default 
%                        parameters for the pop_evokedinduced function  
%
% Author: Fanny Grosselin, 2018                     
%
% Usage:
%   >> resulparamclbk = pop_param_Callback(); 
%
% Graphic interface:
%   "Create new default parameters" - [checkbox] Check it if you want to
%           create new default parameters.
%   "Enter the lower frequency in the decompsition (in Hz)" - [edit box]
%           Enter the lower frequency (>=0 and smaller than higher frequency)
%           for the calcul of time-frequency maps.
%   "Enter the higher frequency in the decompsition (in Hz)" - [edit box] 
%           Enter the higher frequency (higher than lower frequency 
%           and < half of sampling frequency) for the calcul of time-frequency maps.
%   "Resolution (in Hz) between 0,25 and 2 Hz" - [edit box] 
%           Enter the resolution frequency for the calcul of time-frequency maps.
%   "Save" - [pushbutton] Press it if you want to add upper parameters as
%           default parameters. It saves it in a file called default_parameters.
%   "Load default parameters (Hz)" - [listbox] Choose default parameters in the list. 
%   "Help" - [pushbutton] Press it if you need help about how run
%           pop_param_Callback().
%   "Cancel" - [pushbutton] Press it if you want to cancel loading default parameters.
%   "OK" - [pushbutton] Press it to confirm the default parameters chosen
%           and to write them in the coresponding edit text boxes of the graphical
%           user interface displayed by pop_evokedinduced().
%
% Output from pop-up:
%   resulparamclbk - structure containing the lower frequency, the higher
%                    frequency and the frequency resolution for the 
%                    time-frequency map.
%
% See also:
%   pop_evokedinduced()

function resulparamclbk = pop_param_Callback()


% Initialization of the structures resulparamclbk 
% -----------------------------------------------
resulparamclbk = struct();

% list of parameters
% ------------------
show_param = {};
if exist('default_parameters.txt','file') % read default parameters in text file if exists
    fid = fopen('default_parameters.txt','r');
    while ~feof(fid)
        ligne = fgetl(fid);
        show_param{end+1} = [ ligne ];
    end;
    fclose(fid);
end;
        
% Callbacks
% ---------
clbk_new = [...
    'state_new = get(findobj(''parent'', gcbf, ''tag'', ''new''),''value'');'...
    'text_low = findobj(''parent'', gcbf, ''tag'', ''text_low'');'...
    'lower_freq = findobj(''parent'', gcbf, ''tag'', ''lower_freq'');'...
    'text_high = findobj(''parent'', gcbf, ''tag'', ''text_high'');'...
    'higher_freq = findobj(''parent'', gcbf, ''tag'', ''higher_freq'');'...
    'text_res = findobj(''parent'', gcbf, ''tag'', ''text_res'');'...
    'resolution = findobj(''parent'', gcbf, ''tag'', ''resolution'');'...
    'save = findobj(''parent'', gcbf, ''tag'', ''save'');'...
    'if state_new == 0'...
    '    set(text_low,''enable'',''off'');'...
    '    set(lower_freq,''enable'',''off'');'...
    '    set(text_high,''enable'',''off'');'...
    '    set(higher_freq,''enable'',''off'');'...
    '    set(text_res,''enable'',''off'');'...
    '    set(resolution,''enable'',''off'');'...
    '    set(save,''enable'',''off'');'...
    'else'...
    '    set(text_low,''enable'',''on'');'...
    '    set(lower_freq,''enable'',''on'');'...
    '    set(text_high,''enable'',''on'');'...
    '    set(higher_freq,''enable'',''on'');'...
    '    set(text_res,''enable'',''on'');'...
    '    set(resolution,''enable'',''on'');'...
    '    set(save,''enable'',''on'');'...
    'end;'...
    'clear state_new text_low lower_freq text_high higher_freq text_res resolution save;'];

clbk_save = [...
    ... % Recover entries
    'lfreq = get(findobj(''parent'', gcbf, ''tag'', ''lower_freq''),''string'');'...
    'hfreq = get(findobj(''parent'', gcbf, ''tag'', ''higher_freq''),''string'');'...
    'resol = get(findobj(''parent'', gcbf, ''tag'', ''resolution''),''string'');'...
    ...
    'if isempty(lfreq) '...
        ' errordlg2(''The lowest frequency can not be empty !'');'...
    'elseif isempty(hfreq) '...
        ' errordlg2(''The highest frequency can not be empty !'');'...
    'elseif isempty(resol) '...
        ' errordlg2(''The frequency resolution can not be empty !'');'...
    'elseif (str2double(lfreq) >= 0 && str2double(hfreq) <  0.5 * EEG.srate && str2double(lfreq) < str2double(hfreq) && str2double(resol) >= 0 && str2double(resol) <= 2)'...
    ... 
	'    if str2double(resol) <0.25'...
		'    wh = warndlg({''The frequency bin is very small. This can be time-consuming!''});'...
		'    uiwait(wh);'...
	'    end;'...
    '    if exist(''default_parameters.txt'',''file'')'... % Add parameters in the file if these parameters don't already exist
        '    fid = fopen(''default_parameters.txt'',''a+'');'...
        '    k = 0;'... 
        '    while ~feof(fid)'...
            '    ligne = fgetl(fid);'...
            '    str_concat = [''Lower: '' lfreq ''; Higher: '' hfreq ''; Resolution: '' resol];'...
            '    if strcmp(ligne,str_concat)'...
                '    k = 1;'...
                '    errordlg2(''These parameters already exist. See the listbox!'',''Warning'');'...
            '    end;'...
        '    end;'...
        '    if k == 0'...
            '    fprintf(fid,''%s %s %s %s %s %s\n'',''Lower'',lfreq,'' Higher'',hfreq,'' Resolution'',resol);'...
            '    fclose(fid);'...
            ... % Load new listbox
            ... % -------------------------------------------------------------------
            '    listparam = findobj(''parent'', gcbf, ''tag'', ''listparam'');'...
            '    show_param = {};'...
            '    fid = fopen(''default_parameters.txt'',''r'');'...
            '    while ~feof(fid)'...
                '    lign = fgetl(fid);'...
                '    show_param{end+1} = [ lign ];'...
            '    end;'...
            '    set(listparam,''string'',show_param);'...
            '    fclose(fid);'...
            ... % --------------------------------------------------------------------
        '    end;'...
        '    clear k str_concat lign;'...
    '    end;'...
    ...
    '    if ~exist(''default_parameters.txt'',''file'')'... % Create text file if it doesn't exist
        '    fid = fopen(''default_parameters.txt'',''a+'');'...
        '    fprintf(fid,''%s %s %s %s %s %s\n'',''Lower'',lfreq,'' Higher'',hfreq,'' Resolution'',resol);'...
        '    fclose(fid);'...
        ... % Load new listbox
        ... % -------------------------------------------------------------------
        '    listparam = findobj(''parent'', gcbf, ''tag'', ''listparam'');'...
        '    show_param = {};'...
        '    fid = fopen(''default_parameters.txt'',''r'');'...
        '    while ~feof(fid)'...
            '    ligne = fgetl(fid);'...
            '    show_param{end+1} = [ ligne ];'...
        '    end;'...
        '    set(listparam,''string'',show_param);'...
        '    fclose(fid);'...
        ... % --------------------------------------------------------------------
    '    end;'...
    '    clear lfreq hfreq resol fid ans listparam show_param ligne;'...
    'else'...
    '    errordlg2(''The lowest frequency must be positive, the highest frequency must be lower than 0.5 x sample rate and the lowest frquency must be inferior to the highest !'');'...
    'end;'];

ok_param = [...
    'listparam = get(findobj(''parent'', gcbf, ''tag'', ''listparam''),''value'');'...
    'if exist(''default_parameters.txt'',''file'')'...
        '    fid = fopen(''default_parameters.txt'',''r'');'...
        '    for i = 1:listparam'...
               '    param = fgets(fid);'... % Go to parameters chosen
        '    end;'...
        '    [resulparamclbk.keyparam(1),resulparamclbk.valparam(1),'...
        '    resulparamclbk.keyparam(2),resulparamclbk.valparam(2),'...
        '    resulparamclbk.keyparam(3),resulparamclbk.valparam(3)] = strread(param, ''%s %f %s %f %s %f'');'...
        '    fclose(fid);'...
        '    setappdata(0,''resulparamclbk'',resulparamclbk);'...
        '    close(gcbf);'...
        '    clear ans i listparam fid param;'...
        ... % Put default parameters chosen in entries
        '    lower_freq = findobj(gcf,''tag'',''lower_freq'');'...
        '    higher_freq = findobj(gcf,''tag'',''higher_freq'');'...
        '    resolution = findobj(gcf,''tag'',''resolution'');'...
        '    set(lower_freq,''string'',resulparamclbk.valparam(1));'...
        '    set(higher_freq,''string'',resulparamclbk.valparam(2));'...
        '    set(resolution,''string'',resulparamclbk.valparam(3));'...
        '    clear lower_freq higher_freq resolution;'...
    'else'...
        '    errordlg2(''There is no default parameters. Create it or push "Cancel" !'');'...
    'end;'];

% GUI of parameters
% -----------------
supergui ('geomhoriz', { [1] [1 1] [1 1] [1 1] [1] [2.5 1 0.5] [1 1] [1 1] [1] [1 1 1 1]}, 'geomvert', [1 1 1 1 1 2 1 4 1 1], 'uilist', { ...
    { 'style', 'checkbox', 'string','Create new default parameters','callback',clbk_new, 'fontweight','bold','value',0,'tag','new'}...
    { 'style', 'text','string', 'Enter the lower frequency in the decomposition (in Hz)', 'enable','off','tag','text_low'}...
    { 'style', 'edit', 'tag', 'lower_freq','enable','off'}...
    { 'style', 'text','string', 'Enter the higher frequency in the decomposition (in Hz)','enable','off','tag','text_high'}...
    { 'style', 'edit', 'tag', 'higher_freq','enable','off'}...
    { 'style', 'text','string', 'Resolution (in Hz) between 0.25 and 2 Hz', 'enable','off','tag','text_res'}...
    { 'style', 'edit', 'tag', 'resolution','enable','off'}...
    {}...
    {} {'style', 'pushbutton' , 'string', 'Save','enable','off','fontweight','bold','tag','save','callback', clbk_save} {}...
    { 'style', 'text','string', 'Load default parameters (Hz)', 'fontweight','bold'} {}...
    {'style' 'listbox', 'string', show_param , 'value' 1 'max' 10 'tag' 'listparam'} {}...
    {}...
    { 'style', 'pushbutton' , 'string', 'Help' 'callback' 'pophelp(''pop_param_Callback'');' } {}...
    { 'style', 'pushbutton' , 'string', 'Cancel' 'callback' 'close(gcbf);' } ...
    { 'style', 'pushbutton' , 'string', 'OK', 'callback', ok_param}},...
    'title', 'Load default parameters -- pop_param_Callback()');

return ;
